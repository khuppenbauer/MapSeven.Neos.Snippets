include: Library/NodeTypes.ts2
namespace: TypoScript=TYPO3.TypoScript

/**
 * Root TypoScript template for the Snippets Site
 */
page = Page {
	head {
		meta = TypoScript:Template {
			templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/Default.html'
			sectionName = 'meta'
		}

		stylesheets.site = TypoScript:Template {
			templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/Default.html'
			sectionName = 'stylesheets'
		}

		javascripts.site = TypoScript:Template {
			templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/Default.html'
			sectionName = 'scripts'
		}

		stylesheets.foundation >
	}

	body {
		templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/PageFull.html'
		sectionName = 'body'
		parts {
			mainMenu = Menu {
				entryLevel = 1
				templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/TypoScriptObjects/Menu/MainMenu.html'
				maximumLevels = 3
				site = ${site}
			}
			userMenu = Menu {
				templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/TypoScriptObjects/Menu/UserMenu.html'
				userObject = ${Configuration.setting('Flowpack.Neos.FrontendUserManager.userObject')}
				providerName = ${Configuration.setting('Flowpack.Neos.FrontendUserManager.providerName')}
				user = ${Authentication.identifier(this.userObject)}
				isAuthenticated = ${Authentication.isAuthenticated(this.providerName)}
				login = Flowpack.Neos.FrontendUserManager:Login
				logout = Flowpack.Neos.FrontendUserManager:Logout
				@cache {
					entryIdentifier {
						documentNode = ${documentNode}
						domain = ${site.context.currentDomain}
						authenticationIdentifier = ${Authentication.identifier(this.userObject, 'identifier')}
						authenticated = ${Authentication.isAuthenticated(this.providerName)}
					}
				}
			}
		}

		content {
			main = PrimaryContent {
				nodePath = 'main'
			}

			footer = TYPO3.Neos:ContentCollection {
				nodePath = ${q(site).find('footer').property('_path')}
				collection = ${q(site).children('footer').children()}
			}
		}

		javascripts.site = TypoScript:Template {
			templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/Default.html'
			sectionName = 'bodyScripts'
		}

		javascripts.foundation >

	}
	@cache {
		entryIdentifier {
			authenticationIdentifier = ${Authentication.identifier(Configuration.setting('Flowpack.Neos.FrontendUserManager.userObject'), 'identifier')}
			authenticated = ${Authentication.isAuthenticated(Configuration.setting('Flowpack.Neos.FrontendUserManager.providerName'))}
		}
	}
}

blogLeftsidebar < page
blogLeftsidebar {
	body {
		templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/BlogLeftsidebar.html'
		content {
			sidebar = PrimaryContent {
				nodePath = 'sidebar'
			}
		}
	}
}

blogRightsidebar < blogLeftsidebar
blogRightsidebar {
	body {
		templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/BlogRightsidebar.html'
	}
}

pageLeftsidebar < blogLeftsidebar
pageLeftsidebar {
	body {
		templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/PageLeftsidebar.html'
		content {
			sidebar = PrimaryContent {
				nodePath = 'sidebar'
			}
		}
	}
}

pageRightsidebar < blogLeftsidebar
pageRightsidebar {
	body {
		templatePath = 'resource://MapSeven.Neos.Snippets/Private/Templates/Page/PageRightsidebar.html'
		content {
			sidebar = PrimaryContent {
				nodePath = 'sidebar'
			}
		}
	}
}

root {
	@cache {
		entryIdentifier {
			authenticationIdentifier = ${Authentication.identifier(Configuration.setting('Flowpack.Neos.FrontendUserManager.userObject'), 'identifier')}
			authenticated = ${Authentication.isAuthenticated(Configuration.setting('Flowpack.Neos.FrontendUserManager.providerName'))}
		}
	}
}